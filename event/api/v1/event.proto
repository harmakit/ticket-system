syntax = "proto3";
package event.api.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
option go_package = "ticket-system/event/api/v1";

service EventService {
  rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse);
  rpc GetEvent(GetEventRequest) returns (GetEventResponse);
  rpc ListEvents(ListEventsRequest) returns (ListEventsResponse);
  rpc GetTicket(GetTicketRequest) returns (GetTicketResponse);
}

message GetTicketRequest {
  string id = 1;
}

message GetTicketResponse {
  Ticket ticket = 1;
}

message CreateEventRequest {
  NewEvent event = 1;
}

message NewEvent {
  int32 duration = 1;
  string name = 2;
  google.protobuf.Timestamp date = 3;
  string description = 4;
  repeated NewTicket tickets = 5;
  optional string location_id = 6;
}

message NewTicket {
  string name = 1;
  float price = 2;
  int32 seats = 3;
}

message CreateEventResponse {
  Event event = 1;
}

message GetEventRequest {
  string id = 1;
}

message GetEventResponse {
  Event event = 1;
}

message ListEventsRequest {
  int32 limit = 1;
  int32 offset = 2;
  optional string location_id = 3;
}

message ListEventsResponse {
  repeated Event events = 1;
}

message Event {
  string id = 1;
  google.protobuf.Timestamp date = 2;
  int32 duration = 3;
  string name = 4;
  google.protobuf.StringValue description = 5;
  optional Location location = 6;
  repeated Ticket tickets = 7;
}

message Location {
  string id = 1;
  string name = 2;
  string address = 3;
  float lat = 4;
  float lng = 5;
}

message Ticket {
  string id = 1;
  string event_id = 2;
  float  price = 3;
  string name = 4;
}